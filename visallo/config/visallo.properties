
# application privileges granted to new users by default
org.visallo.core.model.user.UserPropertyPrivilegeRepository.defaultPrivileges=READ,COMMENT,EDIT,PUBLISH,SEARCH_SAVE_GLOBAL,HISTORY_READ,ADMIN
org.visallo.core.model.user.UserPropertyAuthorizationRepository.defaultAuthorizations=

#
# repositories
#
simpleOrmSession=com.v5analytics.simpleorm.InMemorySimpleOrmSession
repository.user=org.visallo.vertexium.model.user.VertexiumUserRepository
repository.search=org.visallo.vertexium.model.search.VertexiumSearchRepository
repository.workspace=org.visallo.vertexium.model.workspace.VertexiumWorkspaceRepository
repository.longRunningProcess=org.visallo.vertexium.model.longRunningProcess.VertexiumLongRunningProcessRepository
repository.graphAuthorization=org.visallo.core.model.user.InMemoryGraphAuthorizationRepository
repository.trace=org.visallo.core.trace.DefaultTraceRepository
repository.fileSystem=org.visallo.core.model.file.LocalFileSystemRepository
repository.acl=org.visallo.core.security.AllowAllAclProvider
repository.geocoder=org.visallo.core.geocoding.DefaultGeocoderRepository
repository.authorization=org.visallo.core.model.user.UserPropertyAuthorizationRepository
repository.privilege=org.visallo.core.model.user.UserPropertyPrivilegeRepository

repository.workQueue=org.visallo.model.queue.inmemory.InMemoryWorkQueueRepository
#repository.workQueue=org.visallo.model.rabbitmq.RabbitMQWorkQueueRepository
#repository.workQueue=org.visallo.core.model.hazelcast.HazelcastWorkQueueRepository

repository.userSessionCounter=org.visallo.core.model.user.InMemoryUserSessionCounterRepository
#repository.userSessionCounter=org.visallo.core.model.user.CuratorUserSessionCounterRepository
#repository.userSessionCounter=org.visallo.core.model.hazelcast.HazelcastUserSessionCounterRepository

repository.status=org.visallo.core.status.InMemoryStatusRepository
#repository.status=org.visallo.core.status.CuratorStatusRepository
#repository.status=org.visallo.core.model.hazelcast.HazelcastStatusRepository

repository.directory=org.visallo.core.model.directory.UserRepositoryDirectoryRepository

repository.ontology=org.visallo.vertexium.model.ontology.VertexiumOntologyRepository
#repository.ontology=org.visallo.vertexium.model.ontology.InMemoryOntologyRepository

repository.lock=org.visallo.core.model.lock.SingleJvmLockRepository
#repository.lock=org.visallo.core.model.lock.NonLockingLockRepository
#repository.lock=org.visallo.core.model.hazelcast.HazelcastLockRepository

repository.http=org.visallo.core.http.CachingHttpRepository
#repository.http=org.visallo.core.http.DefaultHttpRepository

#
# email
#
repository.email=org.visallo.core.email.NopEmailRepository
#repository.email=org.visallo.core.email.SmtpEmailRepository
#repository.email.smtp.serverHostname=localhost
#repository.email.smtp.serverPort=25

#
# Vertexium
#
#graph.serializer=org.vertexium.serializer.xstream.XStreamVertexiumSerializer
#graph.serializer=org.vertexium.serializer.kryo.QuickKryoVertexiumSerializer
graph.serializer=org.vertexium.JavaVertexiumSerializer

graph.idgenerator=org.vertexium.id.UUIDIdGenerator

#
# visibilityTranslator
#
security.visibilityTranslator=org.visallo.core.security.DirectVisibilityTranslator

#
# org.visallo.core.formula.FormulaEvaluator
#
#org.visallo.core.formula.FormulaEvaluator.max.threads=1

#
# org.visallo.core.model.notification.SystemNotificationRepository
#
# set checkIntervalSeconds=-1 to disable system notifications
#org.visallo.core.model.notification.SystemNotificationRepository.checkIntervalSeconds=60

# Uncomment to allow plain HTTP. HTTPS is forced otherwise.
http.transportGuarantee=NONE

# Sets system properties early in the startup process. This could be useful for configuring key stores
#  and trust stores for connecting with databases or other data stores. Java's -D option can also be used
#  but using these properties allows consistency between CLI, web, etc.
#systemProperty.javax.net.ssl.keyStore=path_to_keystore_file
#systemProperty.javax.net.ssl.keyStorePassword=password
#systemProperty.javax.net.ssl.trustStore=path_to_truststore_file
#systemProperty.javax.net.ssl.trustStorePassword=password

# If set to false allows runners to continue if fetching the next tuple fails
# org.visallo.core.ingest.graphProperty.GraphPropertyRunner.exitOnNextTupleFailure=true
# org.visallo.core.model.longRunningProcess.LongRunningProcessRunner.exitOnNextTupleFailure=true
